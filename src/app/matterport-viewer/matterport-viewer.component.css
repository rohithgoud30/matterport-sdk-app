/* Container to hold the main and side components */
.container {
  display: flex;
  height: 100vh;
  width: 100vw;
  box-sizing: border-box;
}

/* Main component taking up 75% width */
.main {
  flex: 0 0 75%;
  max-width: 75%;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  overflow: hidden;
}

/* Container for the Matterport viewer */
.viewer-container {
  flex-grow: 1;
  display: flex;
  box-sizing: border-box;
  overflow: hidden;
  height: 100%;
}

/* Full width and height for the viewer */
.matterport-viewer {
  width: 100%;
  height: 100%;
  overflow: hidden;
  box-sizing: border-box;
}

/* Styling for error messages */
.error-message {
  color: red;
  font-size: 24px;
  text-align: center;
  margin: 10px 0; /* Margin for spacing */
}

/* Container for input elements */
.input-container {
  display: flex;
  flex-direction: row;
  justify-content: space-around; /* Distribute space around items */
  align-items: center;
  background-color: #f8f8f8;
  border-bottom: 1px solid #ddd;
  box-sizing: border-box;
  gap: 10px;
  padding: 10px;
}

.input-container label {
  flex-shrink: 0; /* Prevent label from shrinking */
}

.input-container input {
  padding: 8px;
  font-size: 16px;
  flex-grow: 1;
}

.input-container button {
  padding: 8px 16px;
  font-size: 16px;
  cursor: pointer;
  flex-shrink: 0; /* Prevent button from shrinking */
}

/* Container to hold the main and side components */
.container {
  display: flex;
  height: 100vh;
  width: 100%;
  box-sizing: border-box;
  overflow: hidden; /* Prevent overflow */
  box-sizing: border-box;
}

/* Side component taking up 25% width */
.side-component {
  flex: 0 0 25%;
  max-width: 25%; /* Ensure side component does not exceed 25% */
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  background-color: #f8f8f8;
  overflow-y: auto; /* Ensure content is scrollable if needed */
  box-sizing: border-box;
}

/* Responsive layout for smaller screens */
@media screen and (max-width: 1024px) {
  .container {
    flex-direction: column;
    height: auto; /* Adjust height to auto for vertical stacking */
  }

  .main,
  .side-component {
    flex: 0 0 100%;
    max-width: 100%;
    width: 100%;
  }

  .side-component {
    order: 1; /* Ensure side component comes after the main component */
  }

  .viewer-container {
    height: 70vh; /* Adjust height for smaller screens */
  }
}
